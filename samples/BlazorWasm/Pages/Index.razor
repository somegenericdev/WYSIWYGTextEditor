@page "/"
<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
<link href="https://cdn.quilljs.com/1.3.6/quill.bubble.css" rel="stylesheet">
<TextEditor @ref="@_quillHtml" Theme="EditorTheme.Snow" StickyToolBar="true">
    <ToolbarContent>
        <select class="ql-header">
            <option selected=""></option>
            <option value="1"></option>
            <option value="2"></option>
            <option value="3"></option>
            <option value="4"></option>
            <option value="5"></option>
        </select>
        <span class="ql-formats">
            <button class="ql-bold"></button>
            <button class="ql-italic"></button>
            <button class="ql-underline"></button>
            <button class="ql-strike"></button>
        </span>
        <span class="ql-formats">
            <select class="ql-color"></select>
            <select class="ql-background"></select>
        </span>
        <span class="ql-formats">
            <button class="ql-list" value="ordered"></button>
            <button class="ql-list" value="bullet"></button>
        </span>
        <span class="ql-formats">
            <button class="ql-link"></button>
        </span>
    </ToolbarContent>
    <EditorContent>
        <h4>This Toolbar works with HTML</h4>
        <a href="http://BlazorHelpWebsite.com">
            BlazorHelpWebsite.com
        </a>
    </EditorContent>
</TextEditor>
<br />
<button class="btn btn-primary"
        @onclick="GetHtml">
    Get HTML
</button>
<button class="btn btn-primary"
        @onclick="SetHtml">
    Set HTML
</button>
<br />
<div>
    <br />
    @((MarkupString)_quillHtmlContent)
    @_quillHtmlContent
</div>
<br />
@*<TextEditor @ref="@_quillNative"
                    Placeholder="Enter non HTML format like centering...">
    <ToolbarContent>
        <span class="ql-formats">
            <select class="ql-font">
                <option selected=""></option>
                <option value="serif"></option>
                <option value="monospace"></option>
            </select>
            <select class="ql-size">
                <option value="small"></option>
                <option selected=""></option>
                <option value="large"></option>
                <option value="huge"></option>
            </select>
        </span>
        <span class="ql-formats">
            <button class="ql-bold"></button>
            <button class="ql-italic"></button>
            <button class="ql-underline"></button>
            <button class="ql-strike"></button>
        </span>
        <span class="ql-formats">
            <select class="ql-color"></select>
            <select class="ql-background"></select>
        </span>
        <span class="ql-formats">
            <button class="ql-list" value="ordered"></button>
            <button class="ql-list" value="bullet"></button>
            <button class="ql-indent" value="-1"></button>
            <button class="ql-indent" value="+1"></button>
            <select class="ql-align">
                <option selected=""></option>
                <option value="center"></option>
                <option value="right"></option>
                <option value="justify"></option>
            </select>
        </span>
        <span class="ql-formats">
            <button class="ql-link"></button>
        </span>
    </ToolbarContent>
</TextEditor>
<br />
<button class="btn btn-primary"
        @onclick="GetContent">
    Get Content
</button>
<button class="btn btn-primary"
        @onclick="LoadContent">
    Load Content
</button>
<button class="btn btn-primary"
        @onclick="InsertImage">
    Insert Image
</button>
<br />
<br />
<div>
    @_quillContent
</div>
<br />
<br />


<TextEditor @ref="@_quillReadOnly"
                    ReadOnly="true"
                    Theme="EditorTheme.Bubble"
                    DebugLevel="log">
    <ToolbarContent>
        <select class="ql-header">
            <option selected=""></option>
            <option value="1"></option>
            <option value="2"></option>
            <option value="3"></option>
            <option value="4"></option>
            <option value="5"></option>
        </select>
        <span class="ql-formats">
            <button class="ql-bold"></button>
            <button class="ql-italic"></button>
            <button class="ql-underline"></button>
            <button class="ql-strike"></button>
        </span>
        <span class="ql-formats">
            <select class="ql-color"></select>
            <select class="ql-background"></select>
        </span>
        <span class="ql-formats">
            <button class="ql-list" value="ordered"></button>
            <button class="ql-list" value="bullet"></button>
        </span>
        <span class="ql-formats">
            <button class="ql-link"></button>
        </span>
    </ToolbarContent>
    <EditorContent>
        @((MarkupString)_quillReadOnlyContent)
    </EditorContent>
</TextEditor>
<br />
<button class="btn btn-info"
        @onclick="ToggleQuillEditor">
    Toggle Editor
</button>
*@
@code {
    TextEditor _quillHtml;
    TextEditor _quillNative;
    TextEditor _quillReadOnly;

    string _quillHtmlContent;
    string _quillContent;

    readonly string _quillReadOnlyContent =
        @"<span><b>Read Only</b> <u>Content</u></span>";

    bool _mode = false;

    public async void GetHtml()
    {
        _quillHtmlContent = await this._quillHtml.GetHtml();
        StateHasChanged();
    }

    public async void SetHtml()
    {
        string QuillContent =
            @"<a href='http://BlazorHelpWebsite.com/'>" +
            "<img src='images/BlazorHelpWebsite.gif' /></a>";

        await this._quillHtml.LoadHtmlContent(QuillContent);
        StateHasChanged();
    }

    public async void GetContent()
    {
        _quillContent = await _quillNative.GetContent();
        StateHasChanged();
    }
    public async void LoadContent()
    {
        await _quillNative.LoadContent(_quillContent);
        StateHasChanged();
    }
    public async void InsertImage()
    {
        await _quillNative.InsertImage("images/BlazorHelpWebsite.gif");
        StateHasChanged();
    }
    async Task ToggleQuillEditor()
    {
        _mode = (!_mode);
        await _quillReadOnly.EnableEditor(_mode);
    }
}